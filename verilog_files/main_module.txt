`timescale 1ns / 1ps



module DWT_2D(clk,x1,x2,x3,reset);
    
    input clk;
    input reset;
    
    parameter N =262144;//IMAGE SIZE=512X512
    parameter M=131072;//N/2
    parameter K=65536;//N/4
    //parameter INFILE="C:/Users/Shubh/Documents/MATLAB/plain.hex";
    parameter INFILE = "C:/Users/Shubh/Documents/MATLAB/unique.hex";//Insert your Image Hex file here
    //parameter WATERMARK = "C:/Users/Shubh/Documents/MATLAB/monkey.hex";
   parameter WATERMARK = "C:/Users/Shubh/Documents/MATLAB/dsproject.hex";//Insert your Watermark Hex file here
     //parameter WATERMARK = "C:/Users/Shubh/Documents/MATLAB/unique1.hex";
   
   
    
    reg signed [16:0]temp_BMP [0 : N-1];
    reg signed [16:0]temp_watermark[0:N-1];
    
 
    reg signed [16:0]outputfile [0:N-1];
    reg signed [16:0]out [0:N-1];
    reg signed [16:0]out_a[0:N-1];
    reg signed [16:0]outputfile_w [0:N-1];
    
    
    reg signed [16 : 0] total_memory [0 : N-1];
    reg signed [16 : 0] watermark_memory [0 :N-1];
    
    
    reg signed [16:0]sum,diff;
    output reg signed[16:0]x1,x2,x3;
    reg signed [N-1:0]t;
    // memory to store  8-bit data image
    integer i,j;
    reg signed [N-1:0]k;
    reg signed [N-1:0]l;
    reg signed [16:0]visibility_factor;
    
    initial begin
    t=0;
    $readmemh(INFILE,total_memory,0,N-1); // read file from INFILE
    end
    initial begin
    $readmemh(WATERMARK,watermark_memory,0,N-1); // read file from WATERMARK
    end
    
    /*always@(posedge clk)
    begin
    temp_BMP[t]=total_memory[t];
    $display("temp_BMP:%0h",temp_BMP[t]);
    t=t+1;
    #0.1;
    end*/
    initial begin
    
            for(i=0; i<N ; i=i+1) begin //20X20X3 = 1200
                temp_BMP[i] = total_memory[i][16:0]; 
                //temp_BMP[i]=255-temp_BMP[i];
              //$display("temp_BMP:%0h",temp_BMP [i]);
            end
            
           
            l=0;
           visibility_factor=0.5;
            for(i=0; i<N ; i=i+1) begin //20X20X3 = 1200
                temp_watermark[i] = watermark_memory[i][16:0]; 
                //temp_watermark[i]=255-watermark_memory[i][16:0];
               //$display("watermark:%0h",temp_watermark [i]);
               end
    
          
            //#0.5;
           for(j=0;j<M;j=j+1)
            begin
            sum=temp_BMP[j*2]+temp_BMP[j*2+1];
            diff=temp_BMP[j*2]-temp_BMP[j*2+1];
            outputfile[j]=sum;
            outputfile[M+j]=diff;
            
            
            sum=temp_watermark[j*2]+temp_watermark[j*2+1];
            diff=temp_watermark[j*2]-temp_watermark[j*2+1];
            outputfile_w[j]=sum;
            outputfile_w[M+j]=diff;
            end
            
            
            for(j=0;j<M;j=j+1)begin
            temp_BMP[j]=outputfile[j];
            
            temp_watermark[j]=outputfile_w[j];
            end
            
            
            for(j=0;j<K;j=j+1)
            begin
            sum=temp_BMP[j*2]+temp_BMP[j*2+1];
            diff=temp_BMP[j*2]-temp_BMP[j*2+1];
            outputfile[j]=sum;
            outputfile[K+j]=diff;
            
            sum=temp_watermark[j*2]+temp_watermark[j*2+1];
            diff=temp_watermark[j*2]-temp_watermark[j*2+1];
            outputfile_w[j]=sum;
            outputfile_w[K+j]=diff;
            end
            
         
           
           //Verifying the output of INFILE file after DWT transform
           
            //for(i=0;i<400;i=i+4)begin
           // $display("outputfile:%0h",outputfile[i]);
           // $display("outputfile:%0h",outputfile[i+1]);
           // $display("outputfile:%0h",outputfile[i+2]);
           // $display("outputfile:%0h",outputfile[i+3]);
            //end   
               
            //Verifying the output of WATERMARK file after DWT transform
            //for(i=0;i<400;i=i+4)begin
           // $display("outputfile_w:%0h",outputfile_w[i]);
           // $display("outputfile_w:%0h",outputfile_w[i+1]);
           // $display("outputfile_w:%0h",outputfile_w[i+2]);
           // $display("outputfile_w:%0h",outputfile_w[i+3]);
           // end  
            
            for(i=0;i<N;i=i+1)begin
            out[i]=outputfile[i];
            end
            
            
            //multiplying the visibility factor with the transformed watermark image and adding it to the LH component of main IMAGE file
            for(i=M;i<N;i=i+1)begin//LL part of image
            out[i]=outputfile[i]-(outputfile_w[i]*0.5);
            if(out[i]>255)begin
            out[i]=255;
            end
           // out[i]=outputfile[i]+(outputfile_w[i-600]*visibility_factor);
            end
            
            
            for(j=0;j<N;j=j+1)begin
            temp_BMP[j]=out[j];
            end
            
            
           for(j=0;j<K;j=j+1)begin
            sum=(temp_BMP[j]+temp_BMP[j+K])/2;
            diff=(temp_BMP[j]-temp_BMP[j+K])/2;
            out[2*j]=sum;
            out[2*j+1]=diff;
            end
            
            for(j=0;j<M;j=j+1)begin
            temp_BMP[j]=out[j];
            end
            
            for(j=0;j<M;j=j+1)begin
            sum=(temp_BMP[j]+temp_BMP[j+M])/2;
            diff=(temp_BMP[j]-temp_BMP[j+M])/2;
            out[2*j]=sum;
            out[2*j+1]=diff;
            end
            
            //displaying the output image pixels
            for(i=0;i<N;i=i+4)
            begin
           $display("%0h",out[i]);
           $display("%0h",out[i+1]);
           $display("%0h",out[i+2]);
           $display("%0h",out[i+3]);
            end  
       end
            

    
    
   
    
    always @(posedge clk)
    begin
    x1=out[l];
    x2=out[l+1];
    x3=out[l+2];
    l=l+3;
    #0.1;
    end
    
    
   
endmodule
